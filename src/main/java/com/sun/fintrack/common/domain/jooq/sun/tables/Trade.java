/*
 * This file is generated by jOOQ.
 */
package sun.tables;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import sun.Fintrack;
import sun.Keys;
import sun.tables.records.TradeRecord;


/**
 * 거래 내역 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Trade extends TableImpl<TradeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>fintrack.TRADE</code>
     */
    public static final Trade TRADE = new Trade();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TradeRecord> getRecordType() {
        return TradeRecord.class;
    }

    /**
     * The column <code>fintrack.TRADE.TRD_SEQ</code>. 거래 일련번호
     */
    public final TableField<TradeRecord, Long> TRD_SEQ = createField(DSL.name("TRD_SEQ"), SQLDataType.BIGINT.nullable(false).identity(true), this, "거래 일련번호");

    /**
     * The column <code>fintrack.TRADE.MB_SEQ</code>. 회원 일련번호
     */
    public final TableField<TradeRecord, Long> MB_SEQ = createField(DSL.name("MB_SEQ"), SQLDataType.BIGINT.nullable(false), this, "회원 일련번호");

    /**
     * The column <code>fintrack.TRADE.TRD_CTT</code>. 거래 내용
     */
    public final TableField<TradeRecord, String> TRD_CTT = createField(DSL.name("TRD_CTT"), SQLDataType.VARCHAR(255).nullable(false), this, "거래 내용");

    /**
     * The column <code>fintrack.TRADE.TRD_PRC</code>. 거래 금액
     */
    public final TableField<TradeRecord, Long> TRD_PRC = createField(DSL.name("TRD_PRC"), SQLDataType.BIGINT.nullable(false), this, "거래 금액");

    /**
     * The column <code>fintrack.TRADE.TRD_DT</code>. 거래일시
     */
    public final TableField<TradeRecord, LocalDateTime> TRD_DT = createField(DSL.name("TRD_DT"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "거래일시");

    /**
     * The column <code>fintrack.TRADE.TRD_TYP</code>. 거래 타입
     */
    public final TableField<TradeRecord, String> TRD_TYP = createField(DSL.name("TRD_TYP"), SQLDataType.CHAR(1).nullable(false), this, "거래 타입");

    /**
     * The column <code>fintrack.TRADE.AS_SEQ</code>. 자산 일련번호
     */
    public final TableField<TradeRecord, Long> AS_SEQ = createField(DSL.name("AS_SEQ"), SQLDataType.BIGINT.nullable(false), this, "자산 일련번호");

    /**
     * The column <code>fintrack.TRADE.CTG_SEQ</code>. 카테고리 일련번호
     */
    public final TableField<TradeRecord, Long> CTG_SEQ = createField(DSL.name("CTG_SEQ"), SQLDataType.BIGINT.nullable(false), this, "카테고리 일련번호");

    /**
     * The column <code>fintrack.TRADE.TRD_IMG_PATH</code>. 이미지 경로
     */
    public final TableField<TradeRecord, String> TRD_IMG_PATH = createField(DSL.name("TRD_IMG_PATH"), SQLDataType.VARCHAR(255), this, "이미지 경로");

    /**
     * The column <code>fintrack.TRADE.CRE_DT</code>. 등록일시
     */
    public final TableField<TradeRecord, LocalDateTime> CRE_DT = createField(DSL.name("CRE_DT"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "등록일시");

    /**
     * The column <code>fintrack.TRADE.UPD_DT</code>. 수정일시
     */
    public final TableField<TradeRecord, LocalDateTime> UPD_DT = createField(DSL.name("UPD_DT"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "수정일시");

    private Trade(Name alias, Table<TradeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Trade(Name alias, Table<TradeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("거래 내역 테이블"), TableOptions.table());
    }

    /**
     * Create an aliased <code>fintrack.TRADE</code> table reference
     */
    public Trade(String alias) {
        this(DSL.name(alias), TRADE);
    }

    /**
     * Create an aliased <code>fintrack.TRADE</code> table reference
     */
    public Trade(Name alias) {
        this(alias, TRADE);
    }

    /**
     * Create a <code>fintrack.TRADE</code> table reference
     */
    public Trade() {
        this(DSL.name("TRADE"), null);
    }

    public <O extends Record> Trade(Table<O> child, ForeignKey<O, TradeRecord> key) {
        super(child, key, TRADE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Fintrack.FINTRACK;
    }

    @Override
    public Identity<TradeRecord, Long> getIdentity() {
        return (Identity<TradeRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<TradeRecord> getPrimaryKey() {
        return Keys.KEY_TRADE_PRIMARY;
    }

    @Override
    public Trade as(String alias) {
        return new Trade(DSL.name(alias), this);
    }

    @Override
    public Trade as(Name alias) {
        return new Trade(alias, this);
    }

    @Override
    public Trade as(Table<?> alias) {
        return new Trade(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public Trade rename(String name) {
        return new Trade(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Trade rename(Name name) {
        return new Trade(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public Trade rename(Table<?> name) {
        return new Trade(name.getQualifiedName(), null);
    }
}
