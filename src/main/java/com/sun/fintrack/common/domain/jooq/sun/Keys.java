/*
 * This file is generated by jOOQ.
 */
package sun;


import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import sun.tables.Asset;
import sun.tables.Category;
import sun.tables.Member;
import sun.tables.Trade;
import sun.tables.Transfer;
import sun.tables.records.AssetRecord;
import sun.tables.records.CategoryRecord;
import sun.tables.records.MemberRecord;
import sun.tables.records.TradeRecord;
import sun.tables.records.TransferRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * fintrack.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AssetRecord> KEY_ASSET_PRIMARY = Internal.createUniqueKey(Asset.ASSET, DSL.name("KEY_ASSET_PRIMARY"), new TableField[] { Asset.ASSET.AS_SEQ }, true);
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = Internal.createUniqueKey(Category.CATEGORY, DSL.name("KEY_CATEGORY_PRIMARY"), new TableField[] { Category.CATEGORY.CTG_SEQ }, true);
    public static final UniqueKey<MemberRecord> KEY_MEMBER_PRIMARY = Internal.createUniqueKey(Member.MEMBER, DSL.name("KEY_MEMBER_PRIMARY"), new TableField[] { Member.MEMBER.MB_SEQ }, true);
    public static final UniqueKey<TradeRecord> KEY_TRADE_PRIMARY = Internal.createUniqueKey(Trade.TRADE, DSL.name("KEY_TRADE_PRIMARY"), new TableField[] { Trade.TRADE.TRD_SEQ }, true);
    public static final UniqueKey<TransferRecord> KEY_TRANSFER_PRIMARY = Internal.createUniqueKey(Transfer.TRANSFER, DSL.name("KEY_TRANSFER_PRIMARY"), new TableField[] { Transfer.TRANSFER.TRF_SEQ }, true);
}
